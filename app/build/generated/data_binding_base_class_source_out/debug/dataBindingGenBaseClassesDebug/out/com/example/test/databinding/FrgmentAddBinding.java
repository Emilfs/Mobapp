// Generated by data binding compiler. Do not edit!
package com.example.test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.test.R;
import com.example.test.ui.main.add.AddViewModel;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FrgmentAddBinding extends ViewDataBinding {
  @NonNull
  public final Button addPageButton;

  @NonNull
  public final TextInputEditText amountInput;

  @NonNull
  public final TextView howMuchText;

  @NonNull
  public final RadioButton isExpenses;

  @NonNull
  public final RadioButton isIncome;

  @NonNull
  public final TextInputLayout middleLine;

  @NonNull
  public final RadioGroup radioGroup;

  @NonNull
  public final TextInputLayout textInputLayout2;

  @Bindable
  protected AddViewModel mViewModel;

  protected FrgmentAddBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button addPageButton, TextInputEditText amountInput, TextView howMuchText,
      RadioButton isExpenses, RadioButton isIncome, TextInputLayout middleLine,
      RadioGroup radioGroup, TextInputLayout textInputLayout2) {
    super(_bindingComponent, _root, _localFieldCount);
    this.addPageButton = addPageButton;
    this.amountInput = amountInput;
    this.howMuchText = howMuchText;
    this.isExpenses = isExpenses;
    this.isIncome = isIncome;
    this.middleLine = middleLine;
    this.radioGroup = radioGroup;
    this.textInputLayout2 = textInputLayout2;
  }

  public abstract void setViewModel(@Nullable AddViewModel viewModel);

  @Nullable
  public AddViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FrgmentAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.frgment_add, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FrgmentAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FrgmentAddBinding>inflateInternal(inflater, R.layout.frgment_add, root, attachToRoot, component);
  }

  @NonNull
  public static FrgmentAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.frgment_add, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FrgmentAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FrgmentAddBinding>inflateInternal(inflater, R.layout.frgment_add, null, false, component);
  }

  public static FrgmentAddBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FrgmentAddBinding bind(@NonNull View view, @Nullable Object component) {
    return (FrgmentAddBinding)bind(component, view, R.layout.frgment_add);
  }
}
